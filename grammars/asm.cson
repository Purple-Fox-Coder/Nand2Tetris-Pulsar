'scopeName': 'source.asm'
'name': 'asm'
'fileTypes': [
  'asm'
]
'patterns': [
  {
    'match': '\\s*//.*$'
    'name': 'comment.hdl'
  }
  {
    'match': '^\\s*@\\(?[0-9a-zA-Z]+\\)?\\b'
    'name': 'storage.modifier.hdl'
  }
  {
    'match': '\\s*(\\.)*\\[?[0-9]+(\\.)*\\]?\\s+|;\\s*'
    'name': 'constant.language.hdl'
  }
  {
    'match': '^\\s*@(R[0-9]+|SCREEN|KBD)\\b'
    'name': 'storage.modifier.hdl'
  }
  {
    'match': '\\b\\s+(IN)|(OUT)|(PARTS)|(load)\\s+\\b'
    'name': 'keyword.control.hdl'
  }
  {
    'match': '(\\s+|(\\+|\\-))([ADM]+)(\\s+|(\\;|\\+|\\-))'
    'name': 'entity.name.function.hdl'
  }
  {
    'match': '(\\s+|\\;?)((JMP)|(JLT)|(JGT)|(JEQ)|(JNE))\\s*'
    'name': 'entity.name.function.hdl'
  }
  {
    'match': '\\s*\\([a-zA-Z]+\\)\\s*'
    'name': 'entity.name.function.hdl'
  }
  {
    'match': '^\\s*CHIP\\s+[a-zA-Z]+'
    'name': 'storage.type.hdl'
  }
  {
    'match': '\\b(f|m)[A-Z]\\w*\\b'
    'name': 'variable.hdl'
  }
]

folds: [
    type: ['comment', 'preproc_arg']
]
